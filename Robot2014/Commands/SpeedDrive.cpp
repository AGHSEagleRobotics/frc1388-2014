// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "SpeedDrive.h"
SpeedDrive::SpeedDrive() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void SpeedDrive::Initialize()
{
	Robot::driveTrain->leftPID->Enable();
	Robot::driveTrain->rightPID->Enable();
}
// Called repeatedly when this Command is scheduled to run
void SpeedDrive::Execute()
{
	float rightSetpoint;
	float leftSetpoint;
	
//	Multiple the setpoint by a scalar to get a speed so max speed is 10 feet/sec
	rightSetpoint = Robot::oi->getRightXAxis() * 10;
	
	Robot::driveTrain->SetRightSetpoint(rightSetpoint);
	
//	Multiple the setpoint by a scalar to get a speed so max speed is 10 feet/sec
	leftSetpoint = Robot::oi->getLeftXAxis() * 10;
	
	Robot::driveTrain->SetLeftSetpoint(leftSetpoint);
	
//	rightError = ((rightSetpoint - rightFeedback) / 10) * 12;
//	
//	rightOutput = (rightError / 10) * 12;
//	
//	Robot::driveTrain->rightPID(rightOutput);
	
}
// Make this return true when this Command no longer needs to run execute()
bool SpeedDrive::IsFinished() {
	return false;
}
// Called once after isFinished returns true
void SpeedDrive::End()
{
	Robot::driveTrain->leftPID->Disable();
	Robot::driveTrain->rightPID->Disable();
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void SpeedDrive::Interrupted()
{
	End();
}
